{"version":3,"sources":["modules/timeline.js","modules/rootReducer.js","modules/reduxMiddleware.js","modules/timeHelper.js","components/DoingNow.js","components/Timeline.js","containers/Home.js","containers/Router.js","reportWebVitals.js","index.js"],"names":["CREATE_TIMELINE","EDIT_TIMELINE","CLEAR_TIMELINE","DELETE_TIMELINE","EDIT_DOINGNOW","initialState","logs","doingNow","memo","type","end_at","moment","format","rootReducer","combineReducers","timeline","state","action","payloadIncludingId","payload","id","length","Object","assign","rejectedTargetLogs","filter","log","editedNewLogs","sort","a","b","deletedTargetLogs","deletedNewLogs","map","i","store","applyMiddleware","save","createStore","createStoreWithMiddleware","load","subscribe","console","getState","DISPRAY_FORMAT","DoingNow","useSelector","useState","currentTime","setCurrentTime","useEffect","setInterval","_","handleInputChange","event","target","value","checked","name","dispatch","editDoingNow","Container","maxWidth","Box","m","Paper","height","Typography","variant","display","flexWrap","justifyContent","width","textAlign","TextField","label","onChange","fullWidth","Button","onClick","Timeline","targetLogId","targetLog","find","handleDelete","deleteTimeline","TableContainer","component","Table","size","aria-label","TableHead","TableRow","TableCell","align","TableBody","scope","InputBase","Home","Router","className","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","rel","href","document","getElementById"],"mappings":"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","file":"static/js/main.958443cd.chunk.js","sourcesContent":["import moment from \"moment\";\n\nconst CREATE_TIMELINE = 'CREATE_TIMELINE';\nconst EDIT_TIMELINE = 'EDIT_TIMELINE';\nconst CLEAR_TIMELINE = 'CLEAR_TIMELINE';\nconst DELETE_TIMELINE = 'DELETE_TIMELINE';\nconst EDIT_DOINGNOW = 'EDIT_DOINGNOW';\n\nconst initialState = {\n  logs: [],\n  doingNow: {memo:\"\", type:\"\", end_at: moment().format('hh:mm:ss')}\n}\n\nexport const createTimeline = log => {\n  return {\n    type: CREATE_TIMELINE,\n    payload: log\n  }\n}\n\nexport const editTimeline = log => {\n  return {\n    type: EDIT_TIMELINE,\n    payload: log\n  }\n}\n\nexport const deleteTimeline = targetLogId => {\n  return {\n    type: DELETE_TIMELINE,\n    payload: targetLogId\n  }\n}\n\nexport const clearTimeline = () => {\n  return {\n    type: CLEAR_TIMELINE,\n    payload: []\n  }\n}\n\nexport const editDoingNow = doingNow => {\n  return {\n    type: EDIT_DOINGNOW,\n    payload: doingNow\n  }\n}\n\nexport function timelineReducer (state = initialState, action) {\n  switch (action.type) {\n    case CREATE_TIMELINE:\n      const payloadIncludingId = { ...action.payload, id: state.logs.length };\n      return Object.assign({}, state, {logs: [...state.logs, payloadIncludingId]});\n    case EDIT_TIMELINE:\n      const rejectedTargetLogs = state.logs.filter(log => log.id !== action.payload.id);\n      const editedNewLogs = [ ...rejectedTargetLogs, action.payload ].sort((a, b) => a.id - b.id);\n      return Object.assign({}, state, {logs: editedNewLogs});\n    case CLEAR_TIMELINE:\n      return Object.assign({}, state, {logs: action.payload});\n    case DELETE_TIMELINE:\n      const deletedTargetLogs = state.logs.filter(log => log.id !== action.payload);\n      const deletedNewLogs = deletedTargetLogs.map((log, i) => { return { ...log, id: i } });\n      return Object.assign({}, state, {logs: deletedNewLogs});\n    case EDIT_DOINGNOW:\n      return Object.assign({}, state, {doingNow: action.payload});\n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux'\nimport { timelineReducer } from './timeline'\n\nconst rootReducer = combineReducers({\n  timeline: timelineReducer\n})\n\nexport default rootReducer","import { applyMiddleware, createStore } from \"redux\"\nimport rootReducer from \"./rootReducer\"\n\n// Import the necessary methods for saving and loading\nimport { save, load } from \"redux-localstorage-simple\"\n\n/*\n  Saving to LocalStorage is achieved using Redux \n  middleware. The 'save' method is called by Redux \n  each time an action is handled by your reducer.\n*/    \nconst createStoreWithMiddleware = applyMiddleware(\n    save() // Saving done here\n  )(createStore)\n    \n/*\n  Loading from LocalStorage happens during\n  creation of the Redux store.\n*/  \nexport const store = createStoreWithMiddleware(\n  rootReducer,    \n  load() // Loading done here\n)\n\nstore.subscribe(() => console.log(store.getState()))","export const FORMAT = ''; //ISO8601\nexport const DISPRAY_FORMAT = 'hh:mm:ss';","import React, { useEffect, useState } from 'react';\nimport {useSelector} from 'react-redux';\nimport moment from 'moment';\nimport {store} from '../modules/reduxMiddleware';\nimport {\n  FORMAT,\n  DISPRAY_FORMAT\n} from '../modules/timeHelper';\nimport {\n  createTimeline,\n  // clearTimeline,\n  editDoingNow\n} from '../modules/timeline';\nimport {\n  Box,\n  Container,\n  Typography,\n  Paper,\n  TextField,\n  Button\n}from '@material-ui/core';\n\nexport default function DoingNow(){\n\n  const doingNow = useSelector(state => state.timeline.doingNow);\n  const [currentTime, setCurrentTime] = useState(moment().format(FORMAT));\n\n  useEffect(()=>{\n    setInterval(() => {\n      setCurrentTime(_ => moment().format(FORMAT))\n    }, 1000);\n  },[]);\n\n  const handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    store.dispatch(\n      editDoingNow(\n        { \n          ...doingNow,\n          [name]: value\n        }\n      )\n    );\n  }\n\n  const handleSubmit = (_) => {\n    store.dispatch(createTimeline({ ...doingNow, end_at: currentTime }));\n  }\n\n  // const handleClear = (_) => {\n  //   store.dispatch(clearTimeline());\n  // }\n\n  return (\n    <Container maxWidth=\"sm\" >\n      <Box m={1}>\n        <Paper>\n          <Box m={1} height=\"300px\">\n            <Typography variant=\"h6\">\n              What are doing now?\n            </Typography>\n            <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"center\">\n              <Box width=\"100%\" textAlign=\"center\" m={1}>\n                {/* Timer */}\n                <Typography variant=\"h3\">\n                  {moment(currentTime).format(DISPRAY_FORMAT)}\n                </Typography>\n              </Box>\n              <Box width=\"60%\" textAlign=\"center\" m={1}>\n                <TextField name=\"memo\" value={doingNow.memo} label=\"memo\" onChange={handleInputChange} fullWidth/>\n              </Box>\n              <Box width=\"60%\" textAlign=\"center\" m={1}>\n                <TextField name=\"type\" value={doingNow.type} label=\"type\" onChange={handleInputChange} fullWidth/>\n              </Box>\n              <Box width=\"60%\" textAlign=\"center\" m={1}>\n                <Button width=\"60%\" onClick={handleSubmit}>\n                  Submit\n                </Button>\n                {/* <Button width=\"60%\" onClick={handleClear}>\n                  Clear\n                </Button> */}\n              </Box>\n            </Box>\n          </Box>\n        </Paper>\n      </Box>\n    </Container>\n  )\n}","import React from 'react'\nimport moment from 'moment';\nimport { DISPRAY_FORMAT } from '../modules/timeHelper';\nimport { useSelector } from 'react-redux'\nimport { store } from '../modules/reduxMiddleware';\nimport {\n  editTimeline,\n  deleteTimeline\n} from '../modules/timeline';\nimport {\n  Button,\n  Paper,\n  InputBase,\n  TableContainer,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell\n}from '@material-ui/core'\n\nexport default function Timeline() {\n  const logs = useSelector(state => state.timeline.logs)\n\n  const handleInputChange = (targetLogId) => {\n    return (event) => {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    const targetLog = logs.find((log) => log.id === targetLogId)\n\n    store.dispatch(\n      editTimeline(\n        {\n          ...targetLog,\n          [name]: value\n        }\n      )\n    );\n    }\n  }\n\n  const handleDelete = (targetLogId) => {\n    return (_) => {\n      store.dispatch(\n        deleteTimeline(targetLogId)\n      );\n    }\n  }\n\n  return (\n    <>\n      { logs.length !== 0 &&\n        <TableContainer component={Paper}>\n          <Table size=\"small\" aria-label=\"a dense table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>end_at</TableCell>\n                <TableCell align=\"left\">memo</TableCell>\n                <TableCell align=\"left\">type</TableCell>\n                <TableCell align=\"center\">type</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {logs.map((log) => (\n                <TableRow key={log.id}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {moment(log.end_at).format(DISPRAY_FORMAT)}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <InputBase name=\"memo\" value={log.memo} label=\"memo\" onChange={handleInputChange(log.id)} fullWidth/>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <InputBase name=\"type\" value={log.type} label=\"type\" onChange={handleInputChange(log.id)} fullWidth/>\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <Button width=\"60%\" onClick={handleDelete(log.id)}>\n                      Delete\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      }\n    </>\n  )\n}","import React from 'react'\nimport DoingNow from '../components/DoingNow'\nimport Timeline from '../components/Timeline'\nimport {\n  Container\n}from '@material-ui/core'\n\nexport default function Home() {\n  return (\n    <Container maxWidth=\"lg\" >\n      <DoingNow/>\n      <Timeline/>\n    </Container>\n  )\n}","import React from 'react'\nimport { Provider } from 'react-redux'\nimport {store} from '../modules/reduxMiddleware'\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport '../App.css'\nimport Home from './Home'\n\nexport default function Router() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Provider store={store}>\n          <Route exact path='/time-manager' component={Home}/>\n        </Provider>\n      </BrowserRouter>\n    </div>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Router from './containers/Router';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\n    <Router />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}